#! /usr/bin/env ruby
# coding: utf-8


SCRIPT_FILE = "pbs.sh"
PBS_LOG = "pbs.log"


require "optparse"
require "yaml"
require "pp"

## option analysis
OPTS = {}
op = OptionParser.new
#op.on("-e", "--economy"  , "Prior efficiency."){OPTS[:e] = true}
op.on("-s", "--speed"    , "Prior speed.")     {OPTS[:s] = true}

op.on("-g", "--geom-opt" , "Geometry optimization.")     {OPTS[:g] = true}
#op.on("-n", "--nebm"     , "Nudged Elastic Band method."){OPTS[:n] = true}
#op.on("-c", "--cond-find", "Condition Finding.")         {OPTS[:c] = true}

op.parse!(ARGV)

cluster = ARGV[0]
#cluster = ARGV
#qsub で複数のクラスターを候補に入れることができるか？e.g., Ga, Ge
#それによって、ここがかきかわる。

#puts "Options -e and -s cannot be duplicated." if OPTS[:e] && OPTS[:s]
#if [OPTS[:g], OPTS[:n], OPTS[:c]].select_all(true).size ==
#  puts "Options -g, -n, and -c cannot be duplicated."
#  exit
#end

yaml = YAML.load_file("#{ENV["HOME"]}/.machineinfo")
pp yaml

if File.exits?(SCRIPT_FILE)
  puts "#{SCRIPT_FILE} already exist. Exit."
  exit
end

File.open(SCRIPT_FILE, "w") do |io|
  io.puts "#PBS -N task"
  io.puts "#PBS -l nodes=4:ppn=1:Ga"
  io.puts "cd $PBS_O_WORKDIR"
  io.puts "vaspgeomopt"
  #io.puts "#/usr/local/bin/mpiexec /usr/local/bin/vasp5212mpi-ifc11-fast"
  #io.puts "#/home/ippei/local/mpi/mpiexec-0.84/mpiexec /usr/local/calc/bin/vasp5212-mpich2"
  #io.puts "#/usr/local/calc/mpiexec/bin/mpiexec /usr/local/calc/bin/vasp5212-mpich2"
  #io.puts "#~/tmp.rb #OK"

  #io.puts condition
  #io.puts rsync
  #io.puts run
  #io.puts rsync
  #io.puts mv to trash？
end

# Record job_id in pbs. Overwrite if exists.
job_id = `qsub #{SCRIPT_FILE}`
File.open(PBS_LOG, "w") do |io|
  io.puts job_id
end

